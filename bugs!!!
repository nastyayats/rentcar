
Bug #1
Severity: minor
Name: Inconsistency in specification: field "hourrate" from object description corresponds to "daily_price" in json example
Description:
In specification structure of json with car contains field "hourrate", but example of response in specification and implemented api contain field "daily_price".
Expected result:
1. To be defined if car price is measured in hours on in days, and rename the field accordingly.
Json structer from spec:
object { boolean success; string errorMessage ?; object { integer car_id ?; string brand; string model; integer powerrating; integer hourrate; } data ?; }
Json example from spec:
{ "data": { "brand": "Ford", "car_id": 1, "daily_price": 100, "model": "Focus", "power_rating": 100 }, "success": true }


Bug #2
Severity: major
Name: response OK with error message for attempt to delete absent car absent
Description:
Send http request DELETE with car id that does not exist in db.
Receive response with status code 200, that contains json payload:
{
  "errorMessage": "application crashed",
  "success": false
}
Expected result:
App could send http response with status code 400 or 404 and json payload with meaningful error message.
For e.g.:
{
  "errorMessage": "car with id <car_id>" is not found,
  "success": false
}


Bug #3:
Severity: major
Name: app fails to remove last car in list
Description:
Only one car is present in db.
Send http request DELETE with id of this car.
Receive response with status code 200 and payload {"success": true}
Assume that car was removed from db.
Send http request GET with id of this car.
Receive response with status code 200 and payload with full car data.
Expected result: car is deleted from db,
GET request returns response with code 404,
get list request returns response with empty list.


Bug #4:
Severity: major
Name: attempt to add car with daily_price = 0 fails with internal server error
Description:
Send http request POST with "daily_price": 0 in payload.
For e.g.: {"brand": "Ford", "daily_price": 0, "model": "Focus", "power_rating": 100}.
Receive response with status code 500 and payload:
{
"errorMessage": "INTERNAL SERVER ERROR",
"success": false
}
Expected result:
According to documentation app should process "daily_price": 0 as valid value and add such car to db


Bug #5
Severity: trivial
Name: extra white space at the and of error message
Description:
Now:
"Expected key 'model' having non-empty string/unicode value, got type <type 'unicode'> with value "
Expected result:
"Expected key 'model' having non-empty string/unicode value, got type <type 'unicode'> with value"


Bug #6 MAKE BETTER DESCRIPTION
Severity: minor
Name: comma delimited value can be added to integer fields in car payload
Description:
Add car wit payloads
{"brand":"A", "model":"B", "power_rating":1.5, "daily_price":1}
or {"brand":"A", "model":"B", "power_rating":1, "daily_price":1.5}, with comma delimited values in the integer fields.
Car is added successfully, same values are returned in get car response.
Expected results: only integer values can be added to this fields/



